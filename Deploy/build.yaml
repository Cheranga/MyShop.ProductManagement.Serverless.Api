parameters:
  projectFiles: ''

steps:

- task: DotNetCoreCLI@2
  displayName: Build and Restore
  inputs:
    command: 'build'
    projects: |
      ${{parameters.projectFiles}}
    arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration Release'

- task: ArchiveFiles@2
  displayName: 'Archive Files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    replaceExistingArchive: true

- publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  displayName: Create function app artifact
  artifact: webapi

- publish: $(Build.Repository.LocalPath)/Deploy/Resources
  displayName: Create ARM template artifacts
  artifact: deploy   

- task: DotNetCoreCLI@2
  displayName: "Publish database migration console app"
  inputs:
    command: publish 
    arguments: -r win-x64 -p:PublishSingleFile=True --self-contained false -o $(Build.ArtifactStagingDirectory)
    projects: '**/MyShop.ProductManagement.DataMigration.csproj'
    publishWebProjects: false
    zipAfterPublish: False
    enabled: true  

- task: PublishBuildArtifacts@1
  displayName: "Create artifact for database migration"
  inputs:
    pathtoPublish: "$(Build.ArtifactStagingDirectory)/MyShop.ProductManagement.DataMigration/MyShop.ProductManagement.DataMigration.exe"
    artifactName: "DbConsoleApp"              

- task: PublishBuildArtifacts@1
  displayName: "Create artifact for scripts"
  inputs:
    pathtoPublish: Deploy/Scripts
    artifactName: "scripts"   